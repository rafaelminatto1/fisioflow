# Configuração Nginx para Produção - FisioFlow
# Sistema Freemium com Otimizações iOS

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Otimizações de Performance
worker_rlimit_nofile 65535;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Configurações Básicas
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Configurações de Buffer
    client_body_buffer_size 128k;
    client_max_body_size 100m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Configurações de Timeout
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Compressão Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Configurações de Cache
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Rate Limiting para Sistema Freemium
    # Zona para usuários Free
    limit_req_zone $binary_remote_addr zone=free_tier:10m rate=30r/m;
    # Zona para usuários Premium
    limit_req_zone $binary_remote_addr zone=premium_tier:10m rate=100r/m;
    # Zona para usuários Enterprise
    limit_req_zone $binary_remote_addr zone=enterprise_tier:10m rate=1000r/m;
    
    # Zona para API
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Zona para uploads
    limit_req_zone $binary_remote_addr zone=uploads:10m rate=5r/m;

    # Configurações de Segurança
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Upstream para Backend
    upstream backend {
        least_conn;
        server backend:5000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Configuração para detecção de dispositivos iOS
    map $http_user_agent $is_ios {
        default 0;
        "~*iPhone" 1;
        "~*iPad" 1;
        "~*iPod" 1;
    }

    # Configuração para detecção de PWA
    map $http_user_agent $is_pwa {
        default 0;
        "~*FisioFlow" 1;
    }

    # Configuração para tier do usuário (baseado em header customizado)
    map $http_x_user_tier $user_tier {
        default "free";
        "premium" "premium";
        "enterprise" "enterprise";
    }

    # Server Principal
    server {
        listen 80;
        listen [::]:80;
        server_name app.fisioflow.com www.fisioflow.com;
        
        # Redirect HTTP para HTTPS
        return 301 https://$server_name$request_uri;
    }

    # Server HTTPS Principal
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name app.fisioflow.com www.fisioflow.com;

        # Certificados SSL
        ssl_certificate /etc/nginx/ssl/fisioflow.crt;
        ssl_certificate_key /etc/nginx/ssl/fisioflow.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:MozTLS:10m;
        ssl_session_tickets off;

        # Configurações SSL Modernas
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;

        # Root e Index
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Configurações específicas para iOS
        location ~* \.(css|js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Compressão adicional para iOS
            if ($is_ios) {
                gzip_comp_level 9;
            }
        }

        # Configurações para PWA
        location /manifest.json {
            expires 1d;
            add_header Cache-Control "public";
            add_header Content-Type "application/manifest+json";
        }

        location /service-worker.js {
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # API Routes com Rate Limiting baseado em Tier
        location /api/ {
            # Rate limiting baseado no tier do usuário
            if ($user_tier = "free") {
                limit_req zone=free_tier burst=10 nodelay;
            }
            if ($user_tier = "premium") {
                limit_req zone=premium_tier burst=20 nodelay;
            }
            if ($user_tier = "enterprise") {
                limit_req zone=enterprise_tier burst=50 nodelay;
            }

            # Headers para CORS
            add_header Access-Control-Allow-Origin "https://app.fisioflow.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-User-Tier" always;
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;

            # Preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }

            # Proxy para backend
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-User-Tier $http_x_user_tier;
            proxy_set_header X-Is-iOS $is_ios;
            proxy_set_header X-Is-PWA $is_pwa;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Upload de arquivos com rate limiting
        location /api/upload {
            limit_req zone=uploads burst=3 nodelay;
            client_max_body_size 100m;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-User-Tier $http_x_user_tier;
            
            # Timeouts maiores para uploads
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # WebSocket para sincronização em tempo real
        location /ws {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-User-Tier $http_x_user_tier;
            
            # Configurações específicas para WebSocket
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Arquivos estáticos com cache otimizado
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Otimizações para iOS
            if ($is_ios) {
                add_header Vary "Accept";
            }
        }

        # Fontes
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx status (apenas para monitoramento interno)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;
            deny all;
        }

        # Fallback para SPA
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache para HTML
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public";
                
                # Headers específicos para iOS PWA
                if ($is_ios) {
                    add_header X-iOS-Optimized "true";
                }
            }
        }

        # Bloquear acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error pages customizadas
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # Server para monitoramento (apenas interno)
    server {
        listen 8080;
        server_name localhost;
        
        location /metrics {
            proxy_pass http://backend/metrics;
            allow 172.20.0.0/16;
            deny all;
        }
        
        location /prometheus {
            proxy_pass http://prometheus:9090;
            allow 172.20.0.0/16;
            deny all;
        }
        
        location /grafana {
            proxy_pass http://grafana:3000;
            allow 172.20.0.0/16;
            deny all;
        }
    }
}