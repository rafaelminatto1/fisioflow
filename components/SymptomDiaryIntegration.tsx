import React, { useState } from 'react';
import { Patient } from '../types';
import { SymptomDiary } from './SymptomDiary';

interface SymptomDiaryIntegrationProps {
  patient: Patient;
}

/**
 * Componente de integra√ß√£o para o Di√°rio de Sintomas
 * Este componente pode ser usado em qualquer lugar do sistema para abrir o di√°rio de sintomas
 */
export const SymptomDiaryIntegration: React.FC<
  SymptomDiaryIntegrationProps
> = ({ patient }) => {
  const [isOpen, setIsOpen] = useState(false);

  const handleOpenDiary = () => {
    setIsOpen(true);
  };

  const handleCloseDiary = () => {
    setIsOpen(false);
  };

  return (
    <>
      {/* Bot√£o para abrir o di√°rio - pode ser personalizado conforme necess√°rio */}
      <button
        onClick={handleOpenDiary}
        className="flex items-center space-x-2 rounded-lg bg-blue-600 px-4 py-2 text-white transition-colors hover:bg-blue-700"
      >
        <span className="text-lg">üìä</span>
        <span className="font-medium">Di√°rio de Sintomas</span>
      </button>

      {/* Modal do Di√°rio de Sintomas */}
      <SymptomDiary
        patient={patient}
        isOpen={isOpen}
        onClose={handleCloseDiary}
      />
    </>
  );
};

export default SymptomDiaryIntegration;

/**
 * EXEMPLO DE USO:
 *
 * // Em qualquer componente onde voc√™ tenha um paciente
 * import { SymptomDiaryIntegration } from './components/SymptomDiaryIntegration';
 *
 * const PatientDetailsPage = ({ patient }) => {
 *   return (
 *     <div>
 *       <h1>{patient.name}</h1>
 *
 *       // ... outros componentes do paciente
 *
 *       <SymptomDiaryIntegration patient={patient} />
 *     </div>
 *   );
 * };
 *
 *
 * FUNCIONALIDADES IMPLEMENTADAS:
 *
 * ‚úÖ REGISTRO DI√ÅRIO:
 * - Escala de dor (0-10) com localiza√ß√£o anat√¥mica
 * - N√≠vel de energia/fadiga (1-5)
 * - Qualidade do sono (1-5)
 * - Humor/bem-estar (1-5)
 * - Medicamentos tomados
 * - Exerc√≠cios realizados
 *
 * ‚úÖ INTERFACE DE REGISTRO:
 * - Formul√°rio r√°pido (menos de 2 minutos)
 * - Escalas visuais (emojis, barras)
 * - Mapa corporal para localizar dor
 * - Fotos de evolu√ß√£o (suporte b√°sico)
 * - Notas em texto livre
 *
 * ‚úÖ VISUALIZA√á√ÉO DE DADOS:
 * - Gr√°ficos de tend√™ncia por m√©trica
 * - Correla√ß√µes entre vari√°veis
 * - Relat√≥rios semanais/mensais
 * - Compara√ß√£o com per√≠odos anteriores
 * - Alertas para piora significativa
 *
 * ‚úÖ INSIGHTS AUTOM√ÅTICOS:
 * - Identifica√ß√£o de padr√µes
 * - Sugest√µes baseadas nos dados
 * - Alertas para fisioterapeuta
 * - Recomenda√ß√µes personalizadas
 *
 * ‚úÖ ESPECIFICA√á√ïES T√âCNICAS:
 * - Persist√™ncia em localStorage
 * - Gr√°ficos interativos (componentes pr√≥prios)
 * - Algoritmos de an√°lise de tend√™ncia
 * - Interface mobile-first
 * - Sistema multi-tenant
 * - Auditoria completa
 *
 *
 * ESTRUTURA DE COMPONENTES:
 *
 * SymptomDiary (Principal)
 * ‚îú‚îÄ‚îÄ SymptomDiaryEntry (Modal de registro)
 * ‚îú‚îÄ‚îÄ AnatomicalBodyMap (Mapa corporal)
 * ‚îú‚îÄ‚îÄ SymptomDataVisualization (Gr√°ficos)
 * ‚îú‚îÄ‚îÄ SymptomInsightsPanel (Insights autom√°ticos)
 * ‚îî‚îÄ‚îÄ SymptomReports (Relat√≥rios)
 *
 * Servi√ßos:
 * ‚îú‚îÄ‚îÄ SymptomAnalysisService (An√°lise de tend√™ncias)
 * ‚îî‚îÄ‚îÄ useData hooks (Persist√™ncia)
 *
 *
 * COMO USAR OS DIFERENTES MODOS:
 *
 * 1. REGISTRO R√ÅPIDO (< 2 minutos):
 *    - Apenas m√©tricas essenciais
 *    - Interface simplificada
 *    - Ideal para uso di√°rio
 *
 * 2. REGISTRO COMPLETO:
 *    - Todas as funcionalidades
 *    - Mapa corporal detalhado
 *    - Medicamentos e exerc√≠cios
 *    - Notas detalhadas
 *
 * 3. VISUALIZA√á√ÉO:
 *    - Gr√°ficos de linha temporais
 *    - Mapas de calor por hor√°rio
 *    - Matriz de correla√ß√£o
 *    - Estat√≠sticas resumidas
 *
 * 4. INSIGHTS:
 *    - An√°lise autom√°tica de padr√µes
 *    - Tend√™ncias significativas
 *    - Alertas personalizados
 *    - Recomenda√ß√µes baseadas em dados
 *
 * 5. RELAT√ìRIOS:
 *    - Relat√≥rios semanais/mensais
 *    - Compara√ß√£o de per√≠odos
 *    - An√°lise detalhada
 *    - Exporta√ß√£o em PDF/Excel/CSV
 */
